{"version":3,"sources":["components/Form/css/Form.module.scss","css/App.module.scss","components/Form/index.js","utility/http.js","components/Query/index.js","api.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","t","Schema","Types","environmentSchema","singleStep","BooleanType","isRequired","nonResidential","businessSchema","name","StringType","address","userIsOwner","imageSchema","attachments","ArrayType","additionInfoSchema","sidewalkFlat","stepIsWide","correctHeight","contactSchema","canContact","email","isEmail","stepNames","steps","reduce","acc","i","firstStep","lastStep","length","Form","onSubmit","useState","step","setStep","state","setState","disabled","setDisabled","updater","value","next","currentStep","console","assert","nextStep","back","previousStep","ENVIRONMENT_INFO","EnvironmentInfoForm","environment","onChange","goBack","BUSINESS_INFO","BusinessInfoForm","business","IMAGE","ImageForm","image","ADDITIONAL_INFO","AdditionalInfoForm","additional","CONTACT_INFO","ContactForm","isOwner","contact","YesOrNo","children","className","props","FormGroup","styles","question","FormControl","cx","radioGroup","accepter","RadioGroup","Radio","radio","StepForm","schema","heading","subheading","ControlLabel","label","additionInfo","imageForm","imagequestion","Uploader","accept","listType","multiple","autoUpload","removable","form","useRef","schemuh","useMemo","Model","ref","fluid","model","formValue","e","preventDefault","current","check","SubForm","forwardRef","formProps","container","buttonContainer","Button","appearance","size","type","onClick","navbutton","submit","actuallySubmit","Error","fetch","url","options","body","a","window","response","ok","json","getDB","then","db","transaction","objectStore","put","get","urlString","params","URL","Object","entries","key","searchParams","set","post","rawBody","method","mode","openDB","upgrade","upgradeDB","createObjectStore","autoIncrement","keyPath","Column","Table","HeaderCell","Cell","Query","QueryData","this","log","Container","Content","height","data","onRowClick","width","dataKey","rowData","handleAction","id","request","requestId","filter","Component","endpoints","NEW_REPORT","submitReport","fd","FormData","businessName","businessAddress","details","businessDetails","userEmail","forEach","file","append","blobFile","push","App","main","exact","path","component","render","history","stuff","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","process","publicUrl","href","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","reg","sync"],"mappings":"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","file":"static/js/main.547859fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__36Aeo\",\"buttonContainer\":\"Form_buttonContainer__3Bban\",\"navbutton\":\"Form_navbutton__3a4-z\",\"submit\":\"Form_submit__Rnb26 Form_navbutton__3a4-z\",\"radioGroup\":\"Form_radioGroup__3IPfb\",\"radio\":\"Form_radio__1hs9v\",\"label\":\"Form_label__3al_w\",\"heading\":\"Form_heading__2bdQ7\",\"subheading\":\"Form_subheading__2YaO2\",\"actuallySubmit\":\"Form_actuallySubmit__2UrG9\",\"question\":\"Form_question__1BnXh\",\"additionInfo\":\"Form_additionInfo__nmx8t\",\"imageForm\":\"Form_imageForm__1qtdf\",\"imagequestion\":\"Form_imagequestion__JnK2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__zM1Yp\"};","import React, { useState, useMemo, useRef, forwardRef } from \"react\";\r\nimport cx from \"classnames\";\r\nimport {\r\n  Schema,\r\n  Form as RForm,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Button,\r\n  Uploader,\r\n} from \"rsuite\";\r\n\r\nimport styles from \"./css/Form.module.scss\";\r\n\r\nconst t = Schema.Types;\r\n\r\nconst environmentSchema = {\r\n  singleStep: t.BooleanType().isRequired(\"This field is required\"),\r\n  nonResidential: t.BooleanType().isRequired(\"This field is required\"),\r\n};\r\n\r\nconst businessSchema = {\r\n  name: t.StringType().isRequired(\"Business name is required\"),\r\n  address: t.StringType().isRequired(\"Business address is required\"),\r\n  userIsOwner: t.BooleanType().isRequired(\"This field is required\"),\r\n};\r\n\r\nconst imageSchema = {\r\n  attachments: t.ArrayType(),\r\n};\r\n\r\nconst additionInfoSchema = {\r\n  sidewalkFlat: t.BooleanType(),\r\n  stepIsWide: t.BooleanType(),\r\n  correctHeight: t.BooleanType(),\r\n};\r\n\r\nconst contactSchema = {\r\n  canContact: t.BooleanType().isRequired(\"This field is required\"),\r\n  email: t.StringType().isEmail(\"Invalid email address\"),\r\n};\r\n\r\nconst stepNames = [\r\n  \"ENVIRONMENT_INFO\",\r\n  \"BUSINESS_INFO\",\r\n  \"IMAGE\",\r\n  \"ADDITIONAL_INFO\",\r\n  \"CONTACT_INFO\",\r\n];\r\n\r\nconst steps = stepNames.reduce((acc, name, i) => ({ ...acc, [name]: i }), {});\r\n\r\nconst firstStep = steps[stepNames[0]];\r\nconst lastStep = steps[stepNames[stepNames.length - 1]];\r\n\r\nfunction nextStep(currentStep) {\r\n  console.assert(currentStep < lastStep);\r\n  return currentStep + 1;\r\n}\r\n\r\nfunction previousStep(currentStep) {\r\n  console.assert(currentStep > firstStep);\r\n  return currentStep - 1;\r\n}\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [step, setStep] = useState(firstStep);\r\n  const [state, setState] = useState({});\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  function updater(name) {\r\n    return function update(value) {\r\n      setState({ ...state, [name]: value });\r\n    };\r\n  }\r\n\r\n  function next(currentStep) {\r\n    if (currentStep === lastStep) {\r\n      setDisabled(true);\r\n      onSubmit(state);\r\n    } else {\r\n      setStep(nextStep(currentStep));\r\n    }\r\n  }\r\n\r\n  function back(currentStep) {\r\n    setStep(previousStep(currentStep));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {step === steps.ENVIRONMENT_INFO && (\r\n        <EnvironmentInfoForm\r\n          disabled={disabled}\r\n          value={state.environment}\r\n          onChange={updater(\"environment\")}\r\n          onSubmit={next}\r\n          goBack={back}\r\n        />\r\n      )}\r\n      {step === steps.BUSINESS_INFO && (\r\n        <BusinessInfoForm\r\n          disabled={disabled}\r\n          value={state.business}\r\n          onChange={updater(\"business\")}\r\n          onSubmit={next}\r\n          goBack={back}\r\n        />\r\n      )}\r\n      {step === steps.IMAGE && (\r\n        <ImageForm\r\n          value={state.image}\r\n          disabled={disabled}\r\n          onChange={updater(\"image\")}\r\n          onSubmit={next}\r\n          goBack={back}\r\n        />\r\n      )}\r\n      {step === steps.ADDITIONAL_INFO && (\r\n        <AdditionalInfoForm\r\n          value={state.additional}\r\n          disabled={disabled}\r\n          onChange={updater(\"additional\")}\r\n          onSubmit={next}\r\n          goBack={back}\r\n        />\r\n      )}\r\n      {step === steps.CONTACT_INFO && (\r\n        <ContactForm\r\n          isOwner={state.business.userIsOwner}\r\n          disabled={disabled}\r\n          value={state.contact}\r\n          onChange={updater(\"contact\")}\r\n          onSubmit={next}\r\n          goBack={back}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction YesOrNo({ children, className, ...props }) {\r\n  return (\r\n    <FormGroup>\r\n      <p className={styles.question}>{children}</p>\r\n      <FormControl\r\n        className={cx(className, styles.radioGroup)}\r\n        accepter={RadioGroup}\r\n        {...props}\r\n      >\r\n        <Radio className={styles.radio} value={true}>\r\n          Yes.\r\n        </Radio>\r\n        <Radio className={styles.radio} value={false}>\r\n          No.\r\n        </Radio>\r\n      </FormControl>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nfunction EnvironmentInfoForm({ disabled, goBack, value, onChange, onSubmit }) {\r\n  return (\r\n    <StepForm\r\n      schema={environmentSchema}\r\n      value={value}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      step={steps.ENVIRONMENT_INFO}\r\n      goBack={goBack}\r\n      disabled={disabled}\r\n      heading=\"Tell us about an Ottawa business that could use a StopGap ramp.\"\r\n    >\r\n      <YesOrNo name=\"singleStep\">\r\n        Is the location inaccessible due to a single step?\r\n      </YesOrNo>\r\n      <YesOrNo name=\"nonResidential\">Is the location non-residential?</YesOrNo>\r\n    </StepForm>\r\n  );\r\n}\r\n\r\nfunction BusinessInfoForm({ disabled, goBack, value, onChange, onSubmit }) {\r\n  return (\r\n    <StepForm\r\n      schema={businessSchema}\r\n      value={value}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      step={steps.BUSINESS_INFO}\r\n      goBack={goBack}\r\n      heading=\"Where would you like a ramp?\"\r\n      subheading=\"* mandatory\"\r\n    >\r\n      <FormGroup>\r\n        <ControlLabel className={styles.label}>\r\n          Business name *\r\n          <FormControl name=\"name\" />\r\n        </ControlLabel>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <ControlLabel className={styles.label}>\r\n          Address *\r\n          <FormControl name=\"address\" />\r\n        </ControlLabel>\r\n      </FormGroup>\r\n      <YesOrNo name=\"userIsOwner\">Are you the owner of this business?</YesOrNo>\r\n    </StepForm>\r\n  );\r\n}\r\n\r\nfunction AdditionalInfoForm({ disabled, goBack, value, onChange, onSubmit }) {\r\n  return (\r\n    <div className={styles.additionInfo}>\r\n      <StepForm\r\n        schema={additionInfoSchema}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        onSubmit={onSubmit}\r\n        step={steps.ADDITIONAL_INFO}\r\n        goBack={goBack}\r\n        heading=\"Give us some extra information.\"\r\n      >\r\n        <YesOrNo name=\"sidewalkFlat\">Is the sidewalk flat?</YesOrNo>\r\n        <YesOrNo name=\"stepIsWide\">Is the step 34 inches or wider?</YesOrNo>\r\n        <YesOrNo name=\"correctHeight\">\r\n          Is the step taller than 2 inches and shorter than 9 inches?\r\n        </YesOrNo>\r\n      </StepForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ContactForm({ disabled, isOwner, goBack, value, onChange, onSubmit }) {\r\n  return (\r\n    <StepForm\r\n      disabled={disabled}\r\n      schema={\r\n        isOwner\r\n          ? {\r\n              ...contactSchema,\r\n              email: t\r\n                .StringType()\r\n                .isEmail()\r\n                .isRequired(\"This field is required\"),\r\n            }\r\n          : contactSchema\r\n      }\r\n      value={value}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      step={steps.CONTACT_INFO}\r\n      goBack={goBack}\r\n      heading={\r\n        isOwner\r\n          ? \"We'll drop you a line soon.\"\r\n          : \"Can we contact you about this request?\"\r\n      }\r\n    >\r\n      {isOwner || (\r\n        <YesOrNo name=\"canContact\">\r\n          Can we contact you about this request?\r\n        </YesOrNo>\r\n      )}\r\n      <FormGroup>\r\n        <ControlLabel>\r\n          Email address\r\n          <FormControl name=\"email\" isRequired={isOwner} />\r\n        </ControlLabel>\r\n      </FormGroup>\r\n    </StepForm>\r\n  );\r\n}\r\n\r\nfunction ImageForm({ disabled, goBack, value, onChange, onSubmit }) {\r\n  return (\r\n    <div className={styles.imageForm}>\r\n      <StepForm\r\n        disabled={disabled}\r\n        heading=\"Add a photo or two.\"\r\n        schema={imageSchema}\r\n        step={steps.IMAGE}\r\n        onSubmit={onSubmit}\r\n        onChange={onChange}\r\n        value={value}\r\n        goBack={goBack}\r\n      >\r\n        <p className={styles.imagequestion}>\r\n          Be sure to show the step and entryway.\r\n        </p>\r\n        <FormControl\r\n          accepter={Uploader}\r\n          accept=\"image/*\"\r\n          listType=\"picture\"\r\n          multiple\r\n          name=\"attachments\"\r\n          autoUpload={false}\r\n          removable\r\n        ></FormControl>\r\n      </StepForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StepForm({\r\n  children,\r\n  goBack,\r\n  value,\r\n  onChange,\r\n  onSubmit,\r\n  step,\r\n  schema,\r\n  heading,\r\n  disabled,\r\n  ...props\r\n}) {\r\n  const form = useRef(null);\r\n  const schemuh = useMemo(() => Schema.Model(schema), [schema]);\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n\r\n    if (form.current.check()) {\r\n      onSubmit(step);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SubForm\r\n      ref={form}\r\n      fluid\r\n      model={schemuh}\r\n      formValue={value}\r\n      onChange={onChange}\r\n      onSubmit={submit}\r\n      step={step}\r\n      goBack={goBack}\r\n      heading={heading}\r\n      disabled={disabled}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </SubForm>\r\n  );\r\n}\r\n\r\nconst SubForm = forwardRef(function SubForm(\r\n  {\r\n    children,\r\n    disabled,\r\n    className,\r\n    heading,\r\n    subheading,\r\n    step,\r\n    goBack,\r\n    ...formProps\r\n  },\r\n  ref,\r\n) {\r\n  return (\r\n    <RForm ref={ref} className={cx(styles.container, className)} {...formProps}>\r\n      <h2 className={styles.heading}>\r\n        {heading}\r\n        {subheading && (\r\n          <small className={styles.subheading}>{subheading}</small>\r\n        )}\r\n      </h2>\r\n      {children}\r\n      <div className={styles.buttonContainer}>\r\n        {step !== firstStep && (\r\n          <Button\r\n            appearance=\"subtle\"\r\n            size=\"lg\"\r\n            type=\"button\"\r\n            onClick={() => goBack(step)}\r\n            className={styles.navbutton}\r\n          >\r\n            &lt; Back\r\n          </Button>\r\n        )}\r\n        <Button\r\n          appearance=\"primary\"\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          className={cx(styles.submit, {\r\n            [styles.actuallySubmit]: step === lastStep,\r\n          })}\r\n          disabled={disabled}\r\n        >\r\n          {step === lastStep ? \"Submit.\" : \"Next >\"}\r\n        </Button>\r\n      </div>\r\n    </RForm>\r\n  );\r\n});\r\n","import { openDB } from \"idb\";\r\n\r\nexport class HTTPError extends Error {}\r\n\r\n/**\r\n * Make an http request\r\n *\r\n * This function wraps around `window.fetch`, checking if the response is ok and\r\n * throwing if not. By default `fetch` only throws if there is a network error,\r\n * but we care more for if the request was successful.\r\n *\r\n * @param {string} url - The url to make a request to\r\n * @param {object} options - A fetch options object\r\n * @returns Promise - A promise resolving to the body of the response\r\n */\r\nexport async function fetch(url, options, body) {\r\n  try {\r\n    const response = await window.fetch(url, options);\r\n\r\n    if (response.ok) {\r\n      return await response.json();\r\n    }\r\n  } catch (e) {\r\n    getDB().then(function(db) {\r\n      var transaction = db.transaction(\"outbox\", \"readwrite\");\r\n      return transaction.objectStore(\"outbox\").put({\r\n        body,\r\n        url:\r\n          \"https://us-east4-rhok11-stopgap.cloudfunctions.net/uploadRampRequest\",\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Make a GET request\r\n */\r\nexport function get(urlString, params = {}) {\r\n  const url = new URL(urlString);\r\n\r\n  for (const [key, value] of Object.entries(params)) {\r\n    url.searchParams.set(key, value);\r\n  }\r\n\r\n  return fetch(url);\r\n}\r\n\r\nexport function formdataAppendObject(fd, obj) {\r\n  for (const [key, value] of Object.entries(obj)) {\r\n    if (typeof value === \"object\") {\r\n      formdataAppendObject(fd, value);\r\n    } else {\r\n      fd.set(key, value);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Make a POST request\r\n *\r\n * @param {string} url - The URL to send the form data to\r\n * @param {FormData} body - The data to include in the request\r\n * @returns {Promise}\r\n */\r\nexport function post(url, body, rawBody) {\r\n  return fetch(\r\n    url,\r\n    {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      body,\r\n    },\r\n    rawBody,\r\n  );\r\n}\r\n\r\nasync function getDB() {\r\n  return await openDB(\"reports\", 1, {\r\n    upgrade: function(upgradeDB) {\r\n      upgradeDB.createObjectStore(\"outbox\", {\r\n        autoIncrement: true,\r\n        keyPath: \"id\",\r\n      });\r\n    },\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { get } from \"../../utility/http\";\r\n\r\nimport { Button, Container, Content, Table } from \"rsuite\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nclass Query extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { QueryData: [] };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await import(\"rsuite/dist/styles/rsuite-default.css\");\r\n    this.setState({\r\n      QueryData: await get(\r\n        \"https://us-east4-rhok11-stopgap.cloudfunctions.net/getAllRampRequests\",\r\n      ),\r\n    });\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Content>\r\n          <Table\r\n            height={400}\r\n            data={this.state.QueryData}\r\n            onRowClick={data => {\r\n              console.log(data);\r\n            }}\r\n          >\r\n            <Column width={200}>\r\n              <HeaderCell>Business Name</HeaderCell>\r\n              <Cell dataKey=\"request.businessName\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Business Address</HeaderCell>\r\n              <Cell dataKey=\"request.businessAddress\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Business Details</HeaderCell>\r\n              <Cell dataKey=\"request.businessDetails\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Non-residential</HeaderCell>\r\n              <Cell dataKey=\"request.nonResidential\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Step is wide</HeaderCell>\r\n              <Cell dataKey=\"request.stepIsWide\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Sidewalk is Flat</HeaderCell>\r\n              <Cell dataKey=\"request.sidewalkFlat\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Step is within acceptable range</HeaderCell>\r\n              <Cell dataKey=\"request.correctHeight\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Attachments</HeaderCell>\r\n              <Cell dataKey=\"request.attachments\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Has single step</HeaderCell>\r\n              <Cell dataKey=\"request.singleStep\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>User Email</HeaderCell>\r\n              <Cell dataKey=\"request.userEmail\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>Can Contact</HeaderCell>\r\n              <Cell dataKey=\"request.canContact\" />\r\n            </Column>\r\n\r\n            <Column width={200}>\r\n              <HeaderCell>User Is Owner</HeaderCell>\r\n              <Cell dataKey=\"request.userIsOwner\" />\r\n            </Column>\r\n\r\n            <Column width={120}>\r\n              <HeaderCell>Action</HeaderCell>\r\n\r\n              <Cell>\r\n                {rowData => {\r\n                  const handleAction = async () => {\r\n                    const id = rowData.request.requestId;\r\n\r\n                    const url = `https://us-east4-rhok11-stopgap.cloudfunctions.net/deleteRampRequest?rampRequestId=${id}`;\r\n                    await window.fetch(url, {\r\n                      method: \"POST\",\r\n                      mode: \"no-cors\",\r\n                    });\r\n                    this.setState(state => ({\r\n                      QueryData: state.QueryData.filter(\r\n                        ({ request: { requestId } }) => requestId !== id,\r\n                      ),\r\n                    }));\r\n                  };\r\n                  return (\r\n                    <Button type=\"button\" onClick={handleAction}>\r\n                      Remove\r\n                    </Button>\r\n                  );\r\n                }}\r\n              </Cell>\r\n            </Column>\r\n          </Table>\r\n        </Content>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Query;\r\n","import { post } from \"./utility/http\";\r\n\r\nexport const endpoints = {\r\n  NEW_REPORT:\r\n    \"https://us-east4-rhok11-stopgap.cloudfunctions.net/uploadRampRequest\",\r\n};\r\n\r\nexport async function submitReport(data) {\r\n  console.log(data);\r\n  const fd = new FormData();\r\n  const rawBody = {\r\n    businessName: data.business.name,\r\n    businessAddress: data.business.address,\r\n    attachments: [],\r\n    singleStep: data.environment.singleStep,\r\n    nonResidential: data.environment.nonResidential,\r\n    userIsOwner: data.business.userIsOwner,\r\n    canContact: data.contact.canContact,\r\n  };\r\n  fd.set(\"businessName\", data.business.name);\r\n  fd.set(\"businessAddress\", data.business.address);\r\n  fd.set(\"singleStep\", data.environment.singleStep);\r\n  fd.set(\"nonResidential\", data.environment.nonResidential);\r\n  fd.set(\"canContact\", data.contact.canContact);\r\n\r\n  if (data.business.details) {\r\n    fd.set(\"businessDetails\", data.business.details);\r\n    rawBody.businessDetails = data.business.details;\r\n  }\r\n  if (data.contact.email) {\r\n    fd.set(\"userEmail\", data.contact.email);\r\n    rawBody.userEmail = data.contact.email;\r\n  }\r\n  fd.set(\"userIsOwner\", data.business.userIsOwner);\r\n  if (data.image) {\r\n    if (data.image.attachments) {\r\n      data.image.attachments.forEach(file => {\r\n        fd.append(\"attachments\", file.blobFile, file.name);\r\n        rawBody.attachments.push(file);\r\n      });\r\n    }\r\n  }\r\n  if (data.additional) {\r\n    if (data.additional.sidewalkFlat) {\r\n      fd.set(\"sidewalkFlat\", data.additional.sidewalkFlat);\r\n      rawBody.sidewalkFlat = data.additional.sidewalkFlat;\r\n    }\r\n    if (data.additional.stepIsWide) {\r\n      fd.set(\"stepIsWide\", data.additional.stepIsWide);\r\n      rawBody.stepIsWide = data.additional.stepIsWide;\r\n    }\r\n    if (data.additional.correctHeight) {\r\n      fd.set(\"correctHeight\", data.additional.correctHeight);\r\n      rawBody.correctHeight = data.additional.correctHeight;\r\n    }\r\n  }\r\n\r\n  await post(endpoints.NEW_REPORT, fd, rawBody);\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Form from \"./components/Form\";\r\nimport Query from \"./components/Query\";\r\nimport { submitReport } from \"./api\";\r\n\r\nimport styles from \"./css/App.module.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <main className={styles.main}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/query\" component={Query} />\r\n          <Route exact path=\"/thanks\" render={() => <div>Thanks.</div>} />\r\n          <Route\r\n            render={({ history }) => (\r\n              <Form\r\n                onSubmit={async stuff => {\r\n                  await submitReport(stuff);\r\n                  history.push(\"/thanks\");\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  console.log(process.env.NODE_ENV);\r\n  if (\r\n    true ||\r\n    (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator)\r\n  ) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    console.log(publicUrl.origin);\r\n    console.log(window.location.origin);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\r\n      console.log(swUrl);\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(reg => {\r\n          reg.sync.register(\"sendReports\");\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\",\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"normalize.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}