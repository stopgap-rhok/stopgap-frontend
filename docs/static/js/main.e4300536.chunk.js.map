{"version":3,"sources":["components/Form/css/Form.module.scss","css/App.module.scss","components/Form/index.js","utility/http.js","components/Query/index.js","api.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","t","Schema","Types","environmentSchema","singleStep","BooleanType","isRequired","nonResidential","businessSchema","name","StringType","address","userIsOwner","imageSchema","attachments","ArrayType","additionInfoSchema","sidewalkFlat","stepIsWide","correctHeight","contactSchema","canContact","email","isEmail","stepNames","steps","reduce","acc","i","firstStep","lastStep","length","Form","onSubmit","useState","step","setStep","state","setState","updater","value","next","currentStep","console","assert","nextStep","back","previousStep","ENVIRONMENT_INFO","EnvironmentInfoForm","environment","onChange","goBack","BUSINESS_INFO","BusinessInfoForm","business","IMAGE","ImageForm","image","ADDITIONAL_INFO","AdditionalInfoForm","additional","CONTACT_INFO","ContactForm","isOwner","contact","YesOrNo","children","className","props","FormGroup","styles","question","FormControl","cx","radioGroup","accepter","RadioGroup","Radio","radio","StepForm","schema","heading","subheading","ControlLabel","label","additionInfo","imageForm","imagequestion","Uploader","accept","listType","multiple","autoUpload","removable","form","useRef","schemuh","useMemo","Model","ref","fluid","model","formValue","e","preventDefault","current","check","SubForm","forwardRef","formProps","container","buttonContainer","Button","appearance","size","type","onClick","navbutton","submit","actuallySubmit","Error","fetch","url","options","body","a","window","response","ok","json","getDB","then","db","transaction","objectStore","put","get","urlString","params","URL","Object","entries","key","searchParams","set","post","rawBody","method","mode","openDB","upgrade","upgradeDB","createObjectStore","autoIncrement","keyPath","Column","Table","HeaderCell","Cell","Query","QueryData","this","log","Container","Content","height","data","onRowClick","width","dataKey","rowData","handleAction","alert","id","Component","endpoints","NEW_REPORT","submitReport","fd","FormData","businessName","businessAddress","details","businessDetails","userEmail","forEach","file","append","blobFile","push","App","main","exact","path","component","render","history","stuff","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","process","publicUrl","href","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","reg","sync"],"mappings":"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","file":"static/js/main.e4300536.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__2pLXI\",\"buttonContainer\":\"Form_buttonContainer__24Fal\",\"navbutton\":\"Form_navbutton__2YhHT\",\"submit\":\"Form_submit__3yNoO Form_navbutton__2YhHT\",\"radioGroup\":\"Form_radioGroup__1G91H\",\"radio\":\"Form_radio__2rw5C\",\"label\":\"Form_label__3G2px\",\"heading\":\"Form_heading__34apI\",\"subheading\":\"Form_subheading__2Rd1n\",\"actuallySubmit\":\"Form_actuallySubmit__1-Z7A\",\"question\":\"Form_question__vQjhP\",\"additionInfo\":\"Form_additionInfo__1ylv7\",\"imageForm\":\"Form_imageForm__1j9UI\",\"imagequestion\":\"Form_imagequestion__1a_e3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__2l94Q\"};","import React, { useState, useMemo, useRef, forwardRef } from \"react\";\nimport cx from \"classnames\";\nimport {\n  Schema,\n  Form as RForm,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Radio,\n  RadioGroup,\n  Button,\n  Uploader,\n} from \"rsuite\";\n\nimport styles from \"./css/Form.module.scss\";\n\nconst t = Schema.Types;\n\nconst environmentSchema = {\n  singleStep: t.BooleanType().isRequired(\"This field is required\"),\n  nonResidential: t.BooleanType().isRequired(\"This field is required\"),\n};\n\nconst businessSchema = {\n  name: t.StringType().isRequired(\"Business name is required\"),\n  address: t.StringType().isRequired(\"Business address is required\"),\n  userIsOwner: t.BooleanType().isRequired(\"This field is required\"),\n};\n\nconst imageSchema = {\n  attachments: t.ArrayType(),\n};\n\nconst additionInfoSchema = {\n  sidewalkFlat: t.BooleanType(),\n  stepIsWide: t.BooleanType(),\n  correctHeight: t.BooleanType(),\n};\n\nconst contactSchema = {\n  canContact: t.BooleanType().isRequired(\"This field is required\"),\n  email: t.StringType().isEmail(\"Invalid email address\"),\n};\n\nconst stepNames = [\n  \"ENVIRONMENT_INFO\",\n  \"BUSINESS_INFO\",\n  \"IMAGE\",\n  \"ADDITIONAL_INFO\",\n  \"CONTACT_INFO\",\n];\n\nconst steps = stepNames.reduce((acc, name, i) => ({ ...acc, [name]: i }), {});\n\nconst firstStep = steps[stepNames[0]];\nconst lastStep = steps[stepNames[stepNames.length - 1]];\n\nfunction nextStep(currentStep) {\n  console.assert(currentStep < lastStep);\n  return currentStep + 1;\n}\n\nfunction previousStep(currentStep) {\n  console.assert(currentStep > firstStep);\n  return currentStep - 1;\n}\n\nexport default function Form({ onSubmit }) {\n  const [step, setStep] = useState(firstStep);\n  const [state, setState] = useState({});\n\n  function updater(name) {\n    return function update(value) {\n      setState({ ...state, [name]: value });\n    };\n  }\n\n  function next(currentStep) {\n    if (currentStep === lastStep) {\n      onSubmit(state);\n    } else {\n      setStep(nextStep(currentStep));\n    }\n  }\n\n  function back(currentStep) {\n    setStep(previousStep(currentStep));\n  }\n\n  return (\n    <>\n      {step === steps.ENVIRONMENT_INFO && (\n        <EnvironmentInfoForm\n          value={state.environment}\n          onChange={updater(\"environment\")}\n          onSubmit={next}\n          goBack={back}\n        />\n      )}\n      {step === steps.BUSINESS_INFO && (\n        <BusinessInfoForm\n          value={state.business}\n          onChange={updater(\"business\")}\n          onSubmit={next}\n          goBack={back}\n        />\n      )}\n      {step === steps.IMAGE && (\n        <ImageForm\n          value={state.image}\n          onChange={updater(\"image\")}\n          onSubmit={next}\n          goBack={back}\n        />\n      )}\n      {step === steps.ADDITIONAL_INFO && (\n        <AdditionalInfoForm\n          value={state.additional}\n          onChange={updater(\"additional\")}\n          onSubmit={next}\n          goBack={back}\n        />\n      )}\n      {step === steps.CONTACT_INFO && (\n        <ContactForm\n          isOwner={state.business.userIsOwner}\n          value={state.contact}\n          onChange={updater(\"contact\")}\n          onSubmit={next}\n          goBack={back}\n        />\n      )}\n    </>\n  );\n}\n\nfunction YesOrNo({ children, className, ...props }) {\n  return (\n    <FormGroup>\n      <p className={styles.question}>{children}</p>\n      <FormControl\n        className={cx(className, styles.radioGroup)}\n        accepter={RadioGroup}\n        {...props}\n      >\n        <Radio className={styles.radio} value={true}>\n          Yes.\n        </Radio>\n        <Radio className={styles.radio} value={false}>\n          No.\n        </Radio>\n      </FormControl>\n    </FormGroup>\n  );\n}\n\nfunction EnvironmentInfoForm({ goBack, value, onChange, onSubmit }) {\n  return (\n    <StepForm\n      schema={environmentSchema}\n      value={value}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      step={steps.ENVIRONMENT_INFO}\n      goBack={goBack}\n      heading=\"Tell us about an Ottawa business that could use a StopGap ramp.\"\n    >\n      <YesOrNo name=\"singleStep\">\n        Is the location inaccessible due to a single step?\n      </YesOrNo>\n      <YesOrNo name=\"nonResidential\">Is the location non-residential?</YesOrNo>\n    </StepForm>\n  );\n}\n\nfunction BusinessInfoForm({ goBack, value, onChange, onSubmit }) {\n  return (\n    <StepForm\n      schema={businessSchema}\n      value={value}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      step={steps.BUSINESS_INFO}\n      goBack={goBack}\n      heading=\"Where would you like a ramp?\"\n      subheading=\"* mandatory\"\n    >\n      <FormGroup>\n        <ControlLabel className={styles.label}>\n          Business name *\n          <FormControl name=\"name\" />\n        </ControlLabel>\n      </FormGroup>\n      <FormGroup>\n        <ControlLabel className={styles.label}>\n          Address *\n          <FormControl name=\"address\" />\n        </ControlLabel>\n      </FormGroup>\n      <YesOrNo name=\"userIsOwner\">Are you the owner of this business?</YesOrNo>\n    </StepForm>\n  );\n}\n\nfunction AdditionalInfoForm({ goBack, value, onChange, onSubmit }) {\n  return (\n    <div className={styles.additionInfo}>\n      <StepForm\n        schema={additionInfoSchema}\n        value={value}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        step={steps.ADDITIONAL_INFO}\n        goBack={goBack}\n        heading=\"Give us some extra information.\"\n      >\n        <YesOrNo name=\"sidewalkFlat\">Is the sidewalk flat?</YesOrNo>\n        <YesOrNo name=\"stepIsWide\">Is the step 34 inches or wider?</YesOrNo>\n        <YesOrNo name=\"correctHeight\">\n          Is the step taller than 2 inches and shorter than 9 inches?\n        </YesOrNo>\n      </StepForm>\n    </div>\n  );\n}\n\nfunction ContactForm({ isOwner, goBack, value, onChange, onSubmit }) {\n  return (\n    <StepForm\n      schema={\n        isOwner\n          ? {\n              ...contactSchema,\n              email: t\n                .StringType()\n                .isEmail()\n                .isRequired(\"This field is required\"),\n            }\n          : contactSchema\n      }\n      value={value}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      step={steps.CONTACT_INFO}\n      goBack={goBack}\n      heading={\n        isOwner\n          ? \"We'll drop you a line soon.\"\n          : \"Can we contact you about this request?\"\n      }\n    >\n      {isOwner || (\n        <YesOrNo name=\"canContact\">\n          Can we contact you about this request?\n        </YesOrNo>\n      )}\n      <FormGroup>\n        <ControlLabel>\n          Email address\n          <FormControl name=\"email\" isRequired={isOwner} />\n        </ControlLabel>\n      </FormGroup>\n    </StepForm>\n  );\n}\n\nfunction ImageForm({ goBack, value, onChange, onSubmit }) {\n  return (\n    <div className={styles.imageForm}>\n      <StepForm\n        heading=\"Add a photo or two.\"\n        schema={imageSchema}\n        step={steps.IMAGE}\n        onSubmit={onSubmit}\n        onChange={onChange}\n        value={value}\n        goBack={goBack}\n      >\n        <p className={styles.imagequestion}>\n          Be sure to show the step and entryway.\n        </p>\n        <FormControl\n          accepter={Uploader}\n          accept=\"image/*\"\n          listType=\"picture\"\n          multiple\n          name=\"attachments\"\n          autoUpload={false}\n          removable\n        ></FormControl>\n      </StepForm>\n    </div>\n  );\n}\n\nfunction StepForm({\n  children,\n  goBack,\n  value,\n  onChange,\n  onSubmit,\n  step,\n  schema,\n  heading,\n  ...props\n}) {\n  const form = useRef(null);\n  const schemuh = useMemo(() => Schema.Model(schema), [schema]);\n\n  function submit(e) {\n    e.preventDefault();\n\n    if (form.current.check()) {\n      onSubmit(step);\n    }\n  }\n\n  return (\n    <SubForm\n      ref={form}\n      fluid\n      model={schemuh}\n      formValue={value}\n      onChange={onChange}\n      onSubmit={submit}\n      step={step}\n      goBack={goBack}\n      heading={heading}\n      {...props}\n    >\n      {children}\n    </SubForm>\n  );\n}\n\nconst SubForm = forwardRef(function SubForm(\n  { children, className, heading, subheading, step, goBack, ...formProps },\n  ref,\n) {\n  return (\n    <RForm ref={ref} className={cx(styles.container, className)} {...formProps}>\n      <h2 className={styles.heading}>\n        {heading}\n        {subheading && (\n          <small className={styles.subheading}>{subheading}</small>\n        )}\n      </h2>\n      {children}\n      <div className={styles.buttonContainer}>\n        {step !== firstStep && (\n          <Button\n            appearance=\"subtle\"\n            size=\"lg\"\n            type=\"button\"\n            onClick={() => goBack(step)}\n            className={styles.navbutton}\n          >\n            &lt; Back\n          </Button>\n        )}\n        <Button\n          appearance=\"primary\"\n          size=\"lg\"\n          type=\"submit\"\n          className={cx(styles.submit, {\n            [styles.actuallySubmit]: step === lastStep,\n          })}\n        >\n          {step === lastStep ? \"Submit.\" : \"Next >\"}\n        </Button>\n      </div>\n    </RForm>\n  );\n});\n","import { openDB } from \"idb\";\n\nexport class HTTPError extends Error {}\n\n/**\n * Make an http request\n *\n * This function wraps around `window.fetch`, checking if the response is ok and\n * throwing if not. By default `fetch` only throws if there is a network error,\n * but we care more for if the request was successful.\n *\n * @param {string} url - The url to make a request to\n * @param {object} options - A fetch options object\n * @returns Promise - A promise resolving to the body of the response\n */\nexport async function fetch(url, options, body) {\n  try {\n    const response = await window.fetch(url, options);\n\n    if (response.ok) {\n      return await response.json();\n    }\n  } catch (e) {\n    getDB().then(function(db) {\n      var transaction = db.transaction(\"outbox\", \"readwrite\");\n      return transaction.objectStore(\"outbox\").put({\n        body,\n        url:\n          \"https://us-east4-rhok11-stopgap.cloudfunctions.net/uploadRampRequest\",\n      });\n    });\n  }\n}\n\n/**\n * Make a GET request\n */\nexport function get(urlString, params = {}) {\n  const url = new URL(urlString);\n\n  for (const [key, value] of Object.entries(params)) {\n    url.searchParams.set(key, value);\n  }\n\n  return fetch(url);\n}\n\nexport function formdataAppendObject(fd, obj) {\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"object\") {\n      formdataAppendObject(fd, value);\n    } else {\n      fd.set(key, value);\n    }\n  }\n}\n\n/**\n * Make a POST request\n *\n * @param {string} url - The URL to send the form data to\n * @param {FormData} body - The data to include in the request\n * @returns {Promise}\n */\nexport function post(url, body, rawBody) {\n  return fetch(\n    url,\n    {\n      method: \"POST\",\n      mode: \"no-cors\",\n      body,\n    },\n    rawBody,\n  );\n}\n\nasync function getDB() {\n  return await openDB(\"reports\", 1, {\n    upgrade: function(upgradeDB) {\n      upgradeDB.createObjectStore(\"outbox\", {\n        autoIncrement: true,\n        keyPath: \"id\",\n      });\n    },\n  });\n}\n","import React, { Component } from \"react\";\nimport { get } from \"../../utility/http\";\n\nimport { Container, Content, Table } from \"rsuite\";\n\nconst { Column, HeaderCell, Cell } = Table;\nconst boolCell = ({ rowData, dataKey, ...props }) => (\n  <Cell {...props} style={{ padding: 0 }}>\n    <div>\n      <p>{rowData[dataKey]}</p>\n    </div>\n  </Cell>\n);\n\nclass Query extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { QueryData: [] };\n  }\n\n  async componentWillMount() {\n    await import(\"rsuite/dist/styles/rsuite-default.css\");\n    this.setState({\n      QueryData: await get(\n        \"https://us-east4-rhok11-stopgap.cloudfunctions.net/getAllRampRequests\",\n      ),\n    });\n    console.log(this.state);\n  }\n  render() {\n    return (\n      <Container>\n        <Content>\n          <Table\n            height={400}\n            data={this.state.QueryData}\n            onRowClick={data => {\n              console.log(data);\n            }}\n          >\n            <Column width={200}>\n              <HeaderCell>Business Name</HeaderCell>\n              <Cell dataKey=\"request.businessName\" />\n            </Column>\n\n            <Column width={200}>\n              <HeaderCell>Business Address</HeaderCell>\n              <Cell dataKey=\"request.businessAddress\" />\n            </Column>\n\n            <Column width={200}>\n              <HeaderCell>Business Details</HeaderCell>\n              <Cell dataKey=\"request.businessDetails\" />\n            </Column>\n\n            <Column width={200}>\n              <HeaderCell>Met Requirements</HeaderCell>\n              <Cell dataKey=\"request.metRequirements\" />\n            </Column>\n\n            <Column width={200}>\n              <HeaderCell>User Email</HeaderCell>\n              <Cell dataKey=\"request.userEmail\" />\n            </Column>\n\n            <Column width={200}>\n              <HeaderCell>User Is Owner</HeaderCell>\n              <boolCell\n                dataKey=\"request.userIsOwner\"\n                rowData=\"request.userIsOwner\"\n              />\n            </Column>\n\n            <Column width={120}>\n              <HeaderCell>Action</HeaderCell>\n\n              <Cell>\n                {rowData => {\n                  function handleAction() {\n                    alert(`id:${rowData.id}`);\n                  }\n                  return (\n                    <span>\n                      <a onClick={handleAction}> Edit </a> |{\" \"}\n                      <a onClick={handleAction}> Remove </a>\n                    </span>\n                  );\n                }}\n              </Cell>\n            </Column>\n          </Table>\n        </Content>\n      </Container>\n    );\n  }\n}\nexport default Query;\n","import { post } from \"./utility/http\";\n\nexport const endpoints = {\n  NEW_REPORT:\n    \"https://us-east4-rhok11-stopgap.cloudfunctions.net/uploadRampRequest\",\n};\n\nexport async function submitReport(data) {\n  console.log(data);\n  const fd = new FormData();\n  const rawBody = {\n    businessName: data.business.name,\n    businessAddress: data.business.address,\n    attachments: [],\n    singleStep: data.environment.singleStep,\n    nonResidential: data.environment.nonResidential,\n    userIsOwner: data.business.userIsOwner,\n    canContact: data.contact.canContact,\n  };\n  fd.set(\"businessName\", data.business.name);\n  fd.set(\"businessAddress\", data.business.address);\n  fd.set(\"singleStep\", data.environment.singleStep);\n  fd.set(\"nonResidential\", data.environment.nonResidential);\n  fd.set(\"canContact\", data.contact.canContact);\n\n  if (data.business.details) {\n    fd.set(\"businessDetails\", data.business.details);\n    rawBody.businessDetails = data.business.details;\n  }\n  if (data.contact.email) {\n    fd.set(\"userEmail\", data.contact.email);\n    rawBody.userEmail = data.contact.email;\n  }\n  fd.set(\"userIsOwner\", data.business.userIsOwner);\n  if (data.image) {\n    if (data.image.attachments) {\n      data.image.attachments.forEach(file => {\n        fd.append(\"attachments\", file.blobFile, file.name);\n        rawBody.attachments.push(file);\n      });\n    }\n  }\n  if (data.additional) {\n    if (data.additional.sidewalkFlat) {\n      fd.set(\"sidewalkFlat\", data.additional.sidewalkFlat);\n      rawBody.sidewalkFlat = data.additional.sidewalkFlat;\n    }\n    if (data.additional.stepIsWide) {\n      fd.set(\"stepIsWide\", data.additional.stepIsWide);\n      rawBody.stepIsWide = data.additional.stepIsWide;\n    }\n    if (data.additional.correctHeight) {\n      fd.set(\"correctHeight\", data.additional.correctHeight);\n      rawBody.correctHeight = data.additional.correctHeight;\n    }\n  }\n\n  await post(endpoints.NEW_REPORT, fd, rawBody);\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Form from \"./components/Form\";\nimport Query from \"./components/Query\";\nimport { submitReport } from \"./api\";\n\nimport styles from \"./css/App.module.scss\";\n\nfunction App() {\n  return (\n    <main className={styles.main}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/query\" component={Query} />\n          <Route exact path=\"/thanks\" render={() => <div>Thanks.</div>} />\n          <Route\n            render={({ history }) => (\n              <Form\n                onSubmit={async stuff => {\n                  await submitReport(stuff);\n                  history.push(\"/thanks\");\n                }}\n              />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  console.log(process.env.NODE_ENV);\n  if (\n    true ||\n    (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator)\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    console.log(publicUrl.origin);\n    console.log(window.location.origin);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n      console.log(swUrl);\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(reg => {\n          reg.sync.register(\"sendReports\");\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"normalize.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}